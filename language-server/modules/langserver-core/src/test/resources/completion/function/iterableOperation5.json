{
  "position": {
    "line": 2,
    "character": 12
  },
  "source": "function/source/iterableOperation5.bal",
  "items": [
    {
      "label": "getKeys()(string[])",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/builtin_  \n  \nReturns an array of keys contained in the specified JSON.\n  \n  \n---    \n**Parameters**  \n  \n  \n**Return**  \nstring[]"
        }
      },
      "insertText": "getKeys()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "toString()(string)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/builtin_  \n  \nConverts a JSON object to a string representation.\n  \n  \n---    \n**Parameters**  \n  \n  \n**Return**  \nstring"
        }
      },
      "insertText": "toString()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "remove(string key)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/builtin_  \n  \nRemoves each element that matches the given key.\n  \n  \n---    \n**Parameters**  \n- _key_  \n    Key of the field to remove  \n"
        }
      },
      "insertText": "remove(${1:key});",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "toXML($anonType$builtin$0 options)(xml|error)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerina/builtin_  \n  \nConverts a JSON object to a XML representation.\n  \n  \n---    \n**Parameters**  \n- _options_  \n    jsonOptions struct for JSON to XML conversion properties  \n  \n  \n**Return**  \nxml|error"
        }
      },
      "insertText": "toXML(${1:options})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "foreach(\u003c@lambda:function\u003e)",
      "kind": "Function",
      "detail": "Function",
      "insertText": "foreach(function(json v) {\n\t${1}\n});",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "map(\u003c@lambda:function\u003e)",
      "kind": "Function",
      "detail": "Function",
      "insertText": "map(function (json v) returns any {\n\t${1}\n})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "filter(\u003c@lambda:function\u003e)",
      "kind": "Function",
      "detail": "Function",
      "insertText": "filter(function(json v) returns (boolean) {\n\t${1}\n})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "count()",
      "kind": "Function",
      "detail": "Function",
      "insertText": "count()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "length()",
      "kind": "Function",
      "detail": "Function",
      "insertText": "length()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "freeze()",
      "kind": "Function",
      "detail": "Function",
      "insertText": "freeze()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isFrozen()",
      "kind": "Function",
      "detail": "Function",
      "insertText": "isFrozen()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stamp(anydata a)",
      "kind": "Function",
      "detail": "Function",
      "insertText": "stamp(${1})",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "clone()",
      "kind": "Function",
      "detail": "Function",
      "insertText": "clone()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "convert(anydata a)",
      "kind": "Function",
      "detail": "Function",
      "insertText": "convert(${1})",
      "insertTextFormat": "Snippet"
    }
  ]
}
