/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

configurations {
    balRuntime
    jballerinaTools
    ballerina {
        transitive false
    }
    testUtils {
        transitive false
    }
    observeTestUtils {
        transitive false
    }
}

dependencies {
    implementation 'org.ballerinalang:ballerina-lang:0.992.0-m2-SNAPSHOT'
    implementation project(':ballerina-integration-test-utils')
    implementation project(':ballerina-config')
    implementation project(':ballerina-core')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-builtin')
    implementation project(':ballerina-system')
    implementation project(':ballerina-io')
    implementation project(':ballerina-runtime')
    implementation project(':ballerina-runtime-api')
    implementation project(':ballerina-launcher')
    implementation project(':ballerina-http')
    implementation project(':ballerina-encoding')
    implementation project(':ballerina-h2')
    implementation project(':ballerina-mysql')
    implementation project(':ballerina-sql')
    implementation project(':ballerina-transactions')
    implementation project(':protobuf-ballerina')
    implementation project(':ballerina-transactions')
    implementation project(':ballerina-activemq-artemis')
    // implementation project(':ballerina-websub')
    implementation project(':ballerina-jms')
    implementation project(':ballerina-socket')
    implementation project(':ballerina-crypto')
    implementation project(':ballerina-time')
    implementation project(':ballerina-filepath')
    implementation project(':ballerina-observability')
    implementation project(':ballerina-activemq-artemis')
    implementation project(':ballerina-jwt')
    implementation project(':ballerina-ldap')
    implementation project(':ballerina-oauth2')
    implementation project(':ballerina-jvm')
    implementation project(':observability-test-utils')
    implementation project(path: ':ballerina-test-utils', configuration: 'shadow')



    implementation 'io.netty:netty-tcnative-boringssl-static'
    implementation 'org.slf4j:slf4j-api'
    implementation 'com.google.protobuf:protobuf-java'
    implementation 'commons-beanutils:commons-beanutils'

    balRuntime project(':ballerina-runtime')

    baloImplementation project(path: ':ballerina-http', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-h2', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mysql', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-sql', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-transactions', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-utils', configuration: 'baloImplementation')
    // baloImplementation project(path: ':ballerina-websub', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-jms', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-grpc', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-socket', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-observability', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-builtin', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-system', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-config-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':observability-test-utils', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-activemq-artemis', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-crypto', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-task', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-math', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mime', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-cache', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-auth', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-filepath', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-jwt', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-ldap', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-oauth2', configuration: 'baloImplementation')

    testCompile project(':ballerina-mime')
    testCompile 'org.slf4j:slf4j-jdk14'
    testCompile 'io.netty:netty-transport'
    testCompile 'io.netty:netty-codec-http'
    testCompile 'io.netty:netty-codec-http2'
    testCompile 'io.netty:netty-handler'
    testCompile 'org.wso2.orbit.org.yaml:snakeyaml'
    testCompile 'org.awaitility:awaitility'
    testCompile 'org.hsqldb:hsqldb'
    testCompile 'com.h2database:h2'
    testCompile 'io.ballerina.messaging:broker-amqp'
    testCompile 'org.apache.directory.server:apacheds-all'
    testCompile 'org.apache.activemq:artemis-server'
    testCompile 'org.apache.commons:commons-lang3'
    testCompile 'org.testng:testng'
    testCompile project(':ballerina-runtime')

    testUtils project(path: ':ballerina-test-utils', configuration: 'shadow')
    jballerinaTools project(path: ':jballerina-tools', configuration: 'zip')
    ballerina project(path: ':ballerina', configuration: 'zip')
    observeTestUtils project(path: ':observability-test-utils', configuration: 'shadow')
}

task createBre(type: org.gradle.api.tasks.Copy) {
    from configurations.balRuntime
    into "$buildDir/bre/lib"
}

test {
    // make sure ballerina zip is built before test run
    dependsOn = [":ballerina:build", ":jballerina-tools:build"]
    systemProperty "enableJBallerinaTests", "true"
    
    maxParallelForks = 1
    systemProperty 'basedir', "$buildDir"
    systemProperty 'libdir', "$buildDir"
    systemProperty 'server.zip', configurations.ballerina.asPath
    systemProperty 'jballerina.server.zip', configurations.jballerinaTools.asPath
    systemProperty 'java.util.logging.config.file', "$buildDir/resources/test/logging.properties"
    systemProperty 'java.util.logging.manager', 'org.ballerinalang.logging.BLogManager'
    systemProperty 'ballerina.agent.path', configurations.testUtils.asPath
    systemProperty 'observability-test-natives.jar', configurations.observeTestUtils.asPath
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

clean.doFirst {
    delete 'data'
}

description = 'Ballerina - Integration Test'

configurations.all {
    resolutionStrategy.preferProjectModules()
}
