<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->

<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="jBallerina-Test-Suite">
    <listeners>
        <listener class-name="org.ballerinalang.test.listener.TestExecutionListener"/>
        <listener class-name="org.ballerinalang.test.listener.TestNGListener"/>
        <listener class-name="org.ballerinalang.test.listener.JBallerinaTestInitializer"/>
    </listeners>

    <!-- Below tests should run sequentially since it will use same port in each test -->
     <test name="ballerina-http-tests" parallel="false">
         <parameter name="enableJBallerinaTests" value="true"/>
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>

        <classes>
            <class name="org.ballerinalang.test.service.http.HttpBaseTest"/>
            <class name="org.ballerinalang.test.service.http.configuration.AcceptEncodingHeaderTestCase"/>
            <class name="org.ballerinalang.test.service.http.configuration.RequestLimitsConfigurationTest"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpHeaderTestCases"/>
            <class name="org.ballerinalang.test.service.http.sample.RedirectTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.RoutingServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.MutualSSLTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.MutualSSLWithCerts"/>
            <class name="org.ballerinalang.test.service.http.sample.DisableSslTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPVerbsPassthruTestCases"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPClientActionsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.EchoServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ExpectContinueTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpPayloadTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ProxyServerTest"/>
            <class name="org.ballerinalang.test.service.http.sample.EcommerceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.PassthroughServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpOptionsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.RetrySampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HelloWorldSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ServiceChainingSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.TestReusabilityOfRequest"/>
            <class name="org.ballerinalang.test.service.http.sample.CompressionTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.IdleTimeoutResponseTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpPipeliningTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpStatusCodeTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.CipherStrengthSSLTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ResourceFunctionReturnTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPListenerActionsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.MultipleHTTPClientsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPHeaderServerTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.KeepAliveTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPCachingTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPClientContinueTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.SslProtocolTest"/>
            <class name="org.ballerinalang.test.service.http.sample.SerializeComplexXmlTestCase"/>
        </classes>
    </test>

    <test name="ballerina-resiliency-tests" parallel="methods" thread-count="17">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.service.resiliency.HttpResiliencyTest"/>
        </classes>
    </test>

<!--    <test name="ballerina-future-tests" parallel="false">-->
<!--        <classes>-->
<!--            <class name="org.ballerinalang.test.future.CancelledFuturesWithTrxTest"/>-->
<!--        </classes>-->
<!--    </test>-->

    <test name="ballerina-http2-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.service.http2.Http2BaseTest"/>
            <class name="org.ballerinalang.test.service.http2.Http2PriorKnowledgeTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2ServerPushTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2ToHttp1FallbackTestCase"/>
            <class name="org.ballerinalang.test.service.http2.RedirectTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2GenericScenarioTestCase"/>
            <class name="org.ballerinalang.test.service.http2.MultipartTestCase"/>
            <class name="org.ballerinalang.test.service.http2.ClientUpgradeWithLargePayload"/>
            <class name="org.ballerinalang.test.service.http2.HTTP2ClientActionsTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2MutualSslTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2ForwardHeaderTest"/>
        </classes>
    </test>

    <test name="ballerina-auth-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>
        <classes>
            <class name="org.ballerinalang.test.auth.AuthBaseTest"/>
            <class name="org.ballerinalang.test.auth.AuthnConfigInheritanceTest"/>
            <class name="org.ballerinalang.test.auth.AuthnWithMultipleHandlersTest" />
            <class name="org.ballerinalang.test.auth.AuthnWithoutHTTPAnnotationsTest" />
            <class name="org.ballerinalang.test.auth.AuthzCacheTest" />
            <class name="org.ballerinalang.test.auth.AuthzConfigInheritanceTest"/>
<!--            <class name="org.ballerinalang.test.auth.LdapAuthStoreTest"/>-->
            <class name="org.ballerinalang.test.auth.OAuth2ConfigTest"/>
            <class name="org.ballerinalang.test.auth.ResourceLevelAuthTest"/>
            <class name="org.ballerinalang.test.auth.ServiceLevelAuthnTest"/>
            <class name="org.ballerinalang.test.auth.TokenPropagationTest"/>
            <class name="org.ballerinalang.test.auth.AuthWithCustomProvidersHandlersTest"/>
            <class name="org.ballerinalang.test.auth.AuthzConfigPatternTest"/>
            <class name="org.ballerinalang.test.auth.AuthnConfigPatternTest"/>
            <class name="org.ballerinalang.test.auth.AuthnWithOAuth2Test"/>
        </classes>
    </test>

    <test name="ballerina-filter-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.filter.FilterTestCommons"/>
            <class name="org.ballerinalang.test.filter.MultpleFiltersTestCase"/>
            <class name="org.ballerinalang.test.filter.InvocationContextTestCase"/>
            <class name="org.ballerinalang.test.filter.SingleFilterTestCase"/>
        </classes>
    </test>

    <test name="ballerina-transaction-tests" parallel="false">
        <classes>
             <class name="org.ballerinalang.test.transaction.MicroTransactionTestCase"/>
            <class name="org.ballerinalang.test.transaction.RemoteParticipantTransactionTest"/>
        </classes>
    </test>

    <test name="ballerina-websocket-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>
        <classes>
            <class name="org.ballerinalang.test.service.websocket.WebSocketTestCommons"/>
            <class name="org.ballerinalang.test.service.websocket.CancelWebSocketUpgradeTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientInitializationFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientServiceTest"/>
            <class name="org.ballerinalang.test.service.websocket.CustomHeaderClientSupportTest"/>
            <class name="org.ballerinalang.test.service.websocket.CustomHeaderServerSupportTest"/>
            <class name="org.ballerinalang.test.service.websocket.OnErrorWebSocketTest"/>
            <class name="org.ballerinalang.test.service.websocket.PingPongSupportTestCase"/>
            <class name="org.ballerinalang.test.service.websocket.ResourceFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.UpgradeResourceFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketAutoPingPongTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketContinuationAndAggregationTest"/>
            <class name="org.ballerinalang.test.service.websocket.PushAndOnTextResourceTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketQueryAndPathParamSupportTestCase"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketServiceNotFoundTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketSimpleProxyTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketSslProxyTest"/>
            <class name="org.ballerinalang.test.service.websocket.OnBinaryContinuationTest"/>
            <class name="org.ballerinalang.test.service.websocket.MissingResourcesTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientCloseTest"/>
            <class name="org.ballerinalang.test.service.websocket.PushTextFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.IsOpenTest"/>
            <class name="org.ballerinalang.test.service.websocket.SslEchoTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientErrorsTest"/>
            <class name="org.ballerinalang.test.service.websocket.ServerErrorsTest"/>
        </classes>
    </test>

    <test name="ballerina-grpc-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>
        <classes>
            <class name="org.ballerinalang.test.service.grpc.sample.GrpcBaseTest"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ClientStreamingTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingBasicTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingArrayValueTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingHeaderTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.GrpcMutualSslWithCertsTest"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnarySecuredBlockingBasicTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingNestedStructTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.InvalidServiceMethodTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingEmptyValueTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.InvalidMessageTypeTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ServiceUnavailableTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ProtoBuilderTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ServerStreamingTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ByteArrayTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingEnumTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ErrorServiceTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.BidiStreamingTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ErrorReturnServiceTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingOneofFieldTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.Http2GatewayTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.InvalidServiceContractTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.StubGeneratorTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.ProtoMessageTestCase"/>
        </classes>
    </test>

<!--    <test name="ballerina-streaming-tests" parallel="false" enabled="false">-->
<!--        <classes>-->
<!--            <class name="org.ballerinalang.test.streaming.StreamsWithinServicesTestCase"/>-->
<!--        </classes>-->
<!--    </test>-->

<!--    <test name="ballerina-security-tests" parallel="false">-->
<!--        <classes>-->
<!--            <class name="org.ballerinalang.test.security.HTTPResponseXMLSecurityTestCase"/>-->
<!--        </classes>-->
<!--    </test>-->

<!--    <test name="ballerina-websub-tests" parallel="false">-->
<!--        <parameter name="enableJBallerinaTests" value="true"/>-->
<!--        <classes>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubBaseTest"/>-->
<!--            &lt;!&ndash; WebSubServiceExtensionTestCase or any other test which does not have @BeforeClass and belongs to the-->
<!--                "websub-test" group needs to be the first test to run to ensure @BeforeGroup is executed before-->
<!--                @BeforeClass in test classes which have @BeforeClass &ndash;&gt;-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubServiceExtensionTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubServiceExtensionProjectTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubCoreFunctionalityTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubContentTypeSupportTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubDiscoveryWithMultipleSubscribersTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.basic.WebSubRedirectionTestCase"/>-->
<!--        </classes>-->
<!--    </test>-->

<!--    <test name="ballerina-websub-advanced-config-tests" parallel="false">-->
<!--        <parameter name="enableJBallerinaTests" value="true"/>-->
<!--        <classes>-->
<!--            <class name="org.ballerinalang.test.service.websub.advanced.WebSubAdvancedBaseTest"/>-->
<!--            &lt;!&ndash; DummyTestCase or any other test which does not have @BeforeClass and belongs to the-->
<!--                "websub-test" group needs to be the first test to run to ensure @BeforeGroup is executed before-->
<!--                @BeforeClass in test classes which have @BeforeClass &ndash;&gt;-->
<!--            <class name="org.ballerinalang.test.service.websub.advanced.WebSubDummyTestCase"/>-->
<!--            <class name="org.ballerinalang.test.service.websub.advanced.WebSubSecureHubTestCase"/>-->
<!--            &lt;!&ndash;<class name="org.ballerinalang.test.service.websub.advanced.WebSubPersistenceTestCase"/>&ndash;&gt;-->
<!--        </classes>-->
<!--    </test>-->

    <test name="ballerina-data-streaming-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.data.streaming.TableDataStreamingTestCase"/>
        </classes>
    </test>
    <test name="ballerina-socket-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.socket.SocketBaseTest"/>
            <class name="org.ballerinalang.test.socket.SocketClientCallbackServiceTestCase"/>
        </classes>
    </test>

    <test name="ballerina-observability-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.observability.tracing.TracingTestCase"/>
            <class name="org.ballerinalang.test.observability.metrics.MetricsTestCase"/>
        </classes>
    </test>

    <test name="ballerina-packerina-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.packaging.ModulePushTestCase"/>
            <!--            <class name="org.ballerinalang.test.packaging.PackagingNegativeTestCase"/>-->
            <class name="org.ballerinalang.test.packaging.PackagingTestCase"/>
            <class name="org.ballerinalang.test.packaging.LockFileTestCase"/>
            <!--            <class name="org.ballerinalang.test.packaging.NativePackagingTestCase"/>-->
            <class name="org.ballerinalang.test.packaging.PathDependencyTestCase"/>
            <class name="org.ballerinalang.test.packaging.DirectoryTestCase"/>
        </classes>
    </test>

    <test name="ballerina-task-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.task.TaskBaseTest"/>
            <class name="org.ballerinalang.test.task.TimerWithHttpClientTestCase"/>
            <class name="org.ballerinalang.test.task.AppointmentTest"/>
            <class name="org.ballerinalang.test.task.TimerTest"/>
            <class name="org.ballerinalang.test.task.TimerPauseResumeTestCase"/>
            <class name="org.ballerinalang.test.task.TimerStopTestCase"/>
        </classes>
    </test>

    <test name="ballerina-cache-tests" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <classes>
            <class name="org.ballerinalang.test.cache.CacheBaseTest"/>
        </classes>
    </test>

    <test name="ballerina-run-tests" preserve-order="true" parallel="false">
        <parameter name="enableJBallerinaTests" value="true"/>
        <packages>
            <package name="org.ballerinalang.test.run.*"/>
        </packages>
    </test>

    <test name="ballerina-logging-tests" preserve-order="true" parallel="false">
        <parameter name="enableJBallerinaTests" value="true" />
        <classes>
            <class name="org.ballerinalang.test.logging.LogAPITestCase" />
        </classes>
    </test>
</suite>
